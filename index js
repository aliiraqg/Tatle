const express = require('express');
const TelegramBot = require('node-telegram-bot-api');
const cors = require('cors');
const { MongoClient } = require('mongodb');

// إعدادات البوت
const token = '7891399266:AAEDdHQbEzH42ZAZqxzgrnSnGdU2Lr1L0BI';  // توكن البوت
const bot = new TelegramBot(token, { polling: true });

// إعدادات Express لتشغيل الخادم
const app = express();
const PORT = process.env.PORT || 3000;

app.use(cors());
app.use(express.json());
app.use(express.static('public'));

// رابط MongoDB
const MONGO_URI = 'mongodb+srv://alifakarr:Aliliwaa00@ali.wweyt.mongodb.net/?retryWrites=true&w=majority&appName=Ali';
let db, usersCollection;

async function connectDB() {
    const client = new MongoClient(MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true });
    await client.connect();
    db = client.db('telegram_mini_app');
    usersCollection = db.collection('users');
    console.log('تم الاتصال بقاعدة البيانات');
}

connectDB();

// ترحيب المستخدم عند بدء المحادثة
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    // تأكد من أن المستخدم موجود في قاعدة البيانات، وإلا قم بإنشائه
    const user = await usersCollection.findOne({ userId: userId });
    if (!user) {
        await usersCollection.insertOne({ userId: userId, points: 0 });
    }

    // إرسال رابط التطبيق المستخدم في متصفح Telegram
    bot.sendMessage(chatId, 'مرحبًا! اضغط على الرابط لفتح التطبيق:', {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: 'افتح التطبيق',
                        web_app: { url: `https://tatle-alis-projects-e389fa47.vercel.app/?userId=${userId}` }
                    }
                ]
            ]
        }
    });
});

// استلام البيانات القادمة من الويب عبر WebAppData
bot.on('web_app_data', async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const data = JSON.parse(msg.web_app_data.data);

    // حفظ النقاط فقط إذا كانت البيانات قادمة من الواجهة الأمامية عبر التطبيق
    if (data && data.points) {
        await usersCollection.updateOne({ userId: userId }, { $set: { points: data.points } });
        bot.sendMessage(chatId, `تم تحديث نقاطك: ${data.points} نقطة.`);
    }
});

// تشغيل الخادم الأمامي الذي يعرض التطبيق في متصفح تلجرام
app.listen(PORT, () => {
    console.log(`الخادم يعمل على المنفذ ${PORT}`);
});
